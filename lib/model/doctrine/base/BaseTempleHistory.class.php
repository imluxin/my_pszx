<?php

/**
 * BaseTempleHistory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $t_id
 * @property integer $user_id
 * @property integer $coins
 * @property string $txt
 * @property string $g_type
 * @property integer $point_x
 * @property integer $point_y
 * @property double $scale_x
 * @property double $scale_y
 * @property Temple $Temple
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer       getTId()         Returns the current record's "t_id" value
 * @method integer       getUserId()      Returns the current record's "user_id" value
 * @method integer       getCoins()       Returns the current record's "coins" value
 * @method string        getTxt()         Returns the current record's "txt" value
 * @method string        getGType()       Returns the current record's "g_type" value
 * @method integer       getPointX()      Returns the current record's "point_x" value
 * @method integer       getPointY()      Returns the current record's "point_y" value
 * @method double        getScaleX()      Returns the current record's "scale_x" value
 * @method double        getScaleY()      Returns the current record's "scale_y" value
 * @method Temple        getTemple()      Returns the current record's "Temple" value
 * @method sfGuardUser   getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method TempleHistory setTId()         Sets the current record's "t_id" value
 * @method TempleHistory setUserId()      Sets the current record's "user_id" value
 * @method TempleHistory setCoins()       Sets the current record's "coins" value
 * @method TempleHistory setTxt()         Sets the current record's "txt" value
 * @method TempleHistory setGType()       Sets the current record's "g_type" value
 * @method TempleHistory setPointX()      Sets the current record's "point_x" value
 * @method TempleHistory setPointY()      Sets the current record's "point_y" value
 * @method TempleHistory setScaleX()      Sets the current record's "scale_x" value
 * @method TempleHistory setScaleY()      Sets the current record's "scale_y" value
 * @method TempleHistory setTemple()      Sets the current record's "Temple" value
 * @method TempleHistory setSfGuardUser() Sets the current record's "sfGuardUser" value
 * 
 * @package    symfonymodel
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTempleHistory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('temple_history');
        $this->hasColumn('t_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('coins', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('txt', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('g_type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('point_x', 'integer', null, array(
             'type' => 'integer',
             'default' => 240,
             ));
        $this->hasColumn('point_y', 'integer', null, array(
             'type' => 'integer',
             'default' => 30,
             ));
        $this->hasColumn('scale_x', 'double', null, array(
             'type' => 'double',
             'default' => 1,
             ));
        $this->hasColumn('scale_y', 'double', null, array(
             'type' => 'double',
             'default' => 1,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Temple', array(
             'local' => 't_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}