<?php

/**
 * BaseTemple
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $user_name
 * @property string $name
 * @property string $province
 * @property string $city
 * @property string $block
 * @property string $img_one
 * @property string $img_two
 * @property string $img_three
 * @property boolean $is_rejected
 * @property boolean $is_approved
 * @property text $description
 * @property string $last_modify
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $TempleHistory
 * 
 * @method integer             getUserId()        Returns the current record's "user_id" value
 * @method string              getUserName()      Returns the current record's "user_name" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getProvince()      Returns the current record's "province" value
 * @method string              getCity()          Returns the current record's "city" value
 * @method string              getBlock()         Returns the current record's "block" value
 * @method string              getImgOne()        Returns the current record's "img_one" value
 * @method string              getImgTwo()        Returns the current record's "img_two" value
 * @method string              getImgThree()      Returns the current record's "img_three" value
 * @method boolean             getIsRejected()    Returns the current record's "is_rejected" value
 * @method boolean             getIsApproved()    Returns the current record's "is_approved" value
 * @method text                getDescription()   Returns the current record's "description" value
 * @method string              getLastModify()    Returns the current record's "last_modify" value
 * @method sfGuardUser         getSfGuardUser()   Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getTempleHistory() Returns the current record's "TempleHistory" collection
 * @method Temple              setUserId()        Sets the current record's "user_id" value
 * @method Temple              setUserName()      Sets the current record's "user_name" value
 * @method Temple              setName()          Sets the current record's "name" value
 * @method Temple              setProvince()      Sets the current record's "province" value
 * @method Temple              setCity()          Sets the current record's "city" value
 * @method Temple              setBlock()         Sets the current record's "block" value
 * @method Temple              setImgOne()        Sets the current record's "img_one" value
 * @method Temple              setImgTwo()        Sets the current record's "img_two" value
 * @method Temple              setImgThree()      Sets the current record's "img_three" value
 * @method Temple              setIsRejected()    Sets the current record's "is_rejected" value
 * @method Temple              setIsApproved()    Sets the current record's "is_approved" value
 * @method Temple              setDescription()   Sets the current record's "description" value
 * @method Temple              setLastModify()    Sets the current record's "last_modify" value
 * @method Temple              setSfGuardUser()   Sets the current record's "sfGuardUser" value
 * @method Temple              setTempleHistory() Sets the current record's "TempleHistory" collection
 * 
 * @package    symfonymodel
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTemple extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('temple');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('province', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('block', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('img_one', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('img_two', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('img_three', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_rejected', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_approved', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('last_modify', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('TempleHistory', array(
             'local' => 'id',
             'foreign' => 't_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}